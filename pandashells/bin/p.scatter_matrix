#! /usr/bin/env python

#--- standard library imports
import os
import sys
import argparse
import re

############# dev only.  Comment out for production ######################
sys.path.append('../..')
##########################################################################

from pandashells.lib import module_checker_lib, arg_lib, io_lib, plot_lib

#--- import required dependencies
modulesOkay = module_checker_lib.check_for_modules(
        [
            'pandas',
            'matplotlib',
        ])
if not modulesOkay:
    sys.exit(1)

import pandas as pd
import matplotlib as mpl
import pylab as pl

#=============================================================================
if __name__ == '__main__':
    msg = "Create a matrix of scatter plots to show correlation between "
    msg += "specified columns."

    #--- read command line arguments
    parser = argparse.ArgumentParser(
            description=msg)

    arg_lib.addArgs(parser, 'io_in', 'example', 'decorating',
            io_no_col_spec_allowed=False)

    #--- specify columns to histogram
    parser.add_argument("-c", "--cols",
            help="Column(s) to histogram", nargs="+")

    #--- parse arguments
    args = parser.parse_args()


    #--- get the input dataframe
    df = io_lib.df_from_input(args)

    #--- extract parameters from arg parser
    if args.cols:
        cols = args.cols
    else:
        cols = [df.columns[0]]

    #--- make sure all columns exist in dataframe
    bad_col_list = [c for c in cols if not c in df.columns]
    if bad_col_list:
        msg = "\n\nThese columns were not found:\n\t"
        msg += ",\n\t".join(bad_col_list)
        sys.stderr.write(msg+'\n')
        sys.exit(1)

    #--- set the appropriate theme
    plot_lib.set_plot_styling(args)

    # --- create the scatter matrix
    df = df[cols]
    pd.tools.plotting.scatter_matrix(df)
    plot_lib.show(args)
